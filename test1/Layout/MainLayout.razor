@inherits LayoutComponentBase
@inject test1.Services.SpinnerService SpinnerService

<test1.Pages.Components.Spinner ShowSpinner="showSpinner" />
<div class="page dark">
    <div class="sidebar">
        <NavMenu />
    </div>

    <main>
        <div class="top-row px-4 dark-top">
            
        </div>

        <div class="content px-4">
            @Body
        </div>

        <div class="top-row px-4 dark-top">
            <div>Contact Me:</div>
            <a href="https://learn.microsoft.com/aspnet/core/" target="_blank">LinkedIn</a>
            <a href="https://github.com/nass5048" target="_blank">GitHub</a>
            <a href="mailto:mikey.nassoiy@gmail.com" target="_blank">mikey.nassoiy@gmail.com</a>
        </div>
    </main>
</div>

<style>
    .dark{
        background-color: #272729;
		color: white;
    }
    .dark-top {
        background-color: #121213 !important;
    }
</style>
@code{
    private bool showSpinner = false;

    protected override void OnInitialized()
    {
        // initialize state and subscribe to changes
        showSpinner = SpinnerService.IsShowing;
        SpinnerService.OnChange += SpinnerChanged;
    }

    private void SpinnerChanged(bool showing)
    {
        showSpinner = showing;
        // ensure update on UI thread
        InvokeAsync(StateHasChanged);
    }

    // Backwards-compatible method (keeps your existing callers working)
    public Task ToggleSpinner(bool show)
    {
        SpinnerService.Toggle(show);
        return Task.CompletedTask;
    }

    // Unsubscribe to avoid memory leaks
    public void Dispose()
    {
        SpinnerService.OnChange -= SpinnerChanged;
    }
}