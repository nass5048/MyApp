@page "/wordle"

@using System.Text.Json
@using test1.Pages.Components;
@using test1.Wordle.Classes;
@inject Stats stats
@inject test1.Services.SpinnerService SpinnerService

<PageTitle>Wordle</PageTitle>

@if (correctWord != null)
{
	<WordleKeyboardHost Solution=@correctWord OnGameCompleted="completeDaily"/>

	<RobotWordle Solution=@correctWord Hide=@HideRobot/>
}
@code {
	string? correctWord{ get;set; }

	bool HideRobot { get; set; } = true;
	override protected async Task OnInitializedAsync()
	{
		try
		{
			
			SpinnerService.Show();
			var date = DateTime.Today.ToString("yyyy-MM-dd");
			string target = $"https://www.nytimes.com/svc/wordle/v2/{date}.json";
			// Dev/testing proxy - returns raw content. DO NOT use this proxy in production.
			string proxyPrefix = "https://api.allorigins.win/raw?url=";
			using var client = new System.Net.Http.HttpClient();
			string posts = await client.GetStringAsync(proxyPrefix + Uri.EscapeDataString(target));
			
			using JsonDocument document = JsonDocument.Parse(posts);
			JsonElement root = document.RootElement;
			string solution = "";
			if (root.TryGetProperty("solution", out JsonElement nameElement))
			{
				solution = nameElement.GetString();
				correctWord = solution;
			}
		}
		catch (Exception ex)
		{
			Console.Error.WriteLine(ex);
		}
	
		await stats.LoadAsync();
		SpinnerService.Hide();
	}

	public void completeDaily()
	{
		HideRobot = false;
	}
}